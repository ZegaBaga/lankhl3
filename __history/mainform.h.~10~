//---------------------------------------------------------------------------

#ifndef mainformH
#define mainformH
//---------------------------------------------------------------------------
#include <System.Classes.hpp>
#include <Vcl.Controls.hpp>
#include <Vcl.StdCtrls.hpp>
#include <Vcl.Forms.hpp>
#include <Vcl.ComCtrls.hpp>
#include <Vcl.ImgList.hpp>
#include <Vcl.ExtCtrls.hpp>
#include <Data.DB.hpp>
#include <Data.Win.ADODB.hpp>
#include <Vcl.Menus.hpp>
#include <Vcl.Buttons.hpp>
#include <Vcl.AppEvnts.hpp>
#include "myclass.h"
#include <vector>
extern const int CountImage;
//---------------------------------------------------------------------------

class TForm1 : public TForm
{
__published:	// IDE-managed Components
	TImageList *ImageList1;
	TImageList *ImageList2;
	TTreeView *TreeView2;
	TADOQuery *ADOQuery1;
	TPopupMenu *PMGroops;
	TMenuItem *N1;
	TMenuItem *N2;
	TMenuItem *N3;
	TMenuItem *N4;
	TMenuItem *N5;
	TTreeView *TreeView1;
	TPanel *Panel1;
	TRichEdit *RichEdit1;
	TSpeedButton *SpeedButton1;
	TSplitter *Splitter1;
	TSplitter *Splitter2;
	TRichEdit *RichEdit2;
	TPopupMenu *PMObjects;
	TMenuItem *N6;
	TMenuItem *NEditObject;
	TMenuItem *NDelObject;
	TMenuItem *N9;
	TMenuItem *N10;
	TMenuItem *N11;
	TMenuItem *N12;
	TImageList *MenuIcon;
	TTrayIcon *TrayIcon1;
	TImageList *TryImageList;
	TPopupMenu *PMTry;
	TMenuItem *N7;
	TMenuItem *N8;
	TMenuItem *N13;
	TMenuItem *N14;
	TADOConnection *ADOConnection1;
	TMenuItem *N15;
	TMainMenu *MainMenu1;
	TMenuItem *N16;
	void __fastcall FormCreate(TObject *Sender);
	void __fastcall N1Click(TObject *Sender);
	void __fastcall TreeView1MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y);
	void __fastcall TreeView1MouseMove(TObject *Sender, TShiftState Shift, int X, int Y);
	void __fastcall TreeView1Click(TObject *Sender);
	void __fastcall N4Click(TObject *Sender);
	void __fastcall N5Click(TObject *Sender);
	void __fastcall TreeView1DragOver(TObject *Sender, TObject *Source, int X, int Y,
          TDragState State, bool &Accept);
	void __fastcall TreeView1DragDrop(TObject *Sender, TObject *Source, int X, int Y);
	void __fastcall FormCloseQuery(TObject *Sender, bool &CanClose);
	void __fastcall SpeedButton1Click(TObject *Sender);
	void __fastcall N9Click(TObject *Sender);
	void __fastcall TreeView2MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
          int X, int Y);
	void __fastcall TreeView2DragOver(TObject *Sender, TObject *Source, int X, int Y,
          TDragState State, bool &Accept);
	void __fastcall TreeView2DragDrop(TObject *Sender, TObject *Source, int X, int Y);
	void __fastcall NDelObjectClick(TObject *Sender);
	void __fastcall NEditObjectClick(TObject *Sender);
	void __fastcall TreeView2Click(TObject *Sender);
	void __fastcall N7Click(TObject *Sender);
	void __fastcall N13Click(TObject *Sender);
	void __fastcall N14Click(TObject *Sender);
	void __fastcall N15Click(TObject *Sender);




private:	// User declarations
public:		// User declarations
	__fastcall TForm1(TComponent* Owner);
	void __fastcall RindexGroop();
	void __fastcall SQLChange(UnicodeString query0);
	void __fastcall LoadGroops();
	int __fastcall SerechNode(UnicodeString Pernt);
	int __fastcall SerechNodeObject(UnicodeString Pernt);
	void __fastcall VisiblControlGroop(int tipgroop);
	void __fastcall SetIcons();
	int __fastcall OutputDiscription(int start,UnicodeString title,UnicodeString text,TColor color);
	int __fastcall OutputDiscription2(int start,UnicodeString title,UnicodeString text,TColor color);
	void __fastcall LoadObjects();
	void __fastcall RindexObjects();
	void __fastcall SetIconsOjects();
	std::vector <func*> funclist;
	std::vector <tarm*> armlist;
	UnicodeString __fastcall GetFunctionLong(UnicodeString str);
};
//---------------------------------------------------------------------------
extern PACKAGE TForm1 *Form1;
//---------------------------------------------------------------------------
#endif
